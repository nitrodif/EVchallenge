  // U74589834
class Car:
    def __init__(self, make, speed=0):
        self.make = make
        self.speed = speed

    def accelerate(self, amount):
        self.speed += amount
        print(f"{self.make} going at {self.speed} km/h")

    def brake(self, amount):
        self.speed -= amount
        if self.speed < 0:
            self.speed = 0
        print(f"{self.make} slowing down to {self.speed} km/h")


class EV(Car):
    def __init__(self, make, speed=0, charge=0):
        super().__init__(make, speed)
        self.charge = charge  # New property for battery charge
# Commit message: "Create EV class extending Car with additional charge property."
class EV(Car):
    def __init__(self, make, speed=0, charge=0):
        super().__init__(make, speed)
        self.charge = charge

    def chargeBattery(self, chargeTo):
        self.charge = chargeTo
        print(f"{self.make} battery charged to {self.charge}%")

# Commit message: "Implement chargeBattery method in EV class."
class EV(Car):
    def __init__(self, make, speed=0, charge=0):
        super().__init__(make, speed)
        self.charge = charge

    def chargeBattery(self, chargeTo):
        self.charge = chargeTo
        print(f"{self.make} battery charged to {self.charge}%")

    def accelerate(self, amount):
        if self.charge > 0:
            self.speed += amount
            self.charge -= 1  # Decrease charge by 1% on acceleration
            print(f"{self.make} going at {self.speed} km/h, with a charge of {self.charge}%")
        else:
            print(f"{self.make} has no battery charge, cannot accelerate!")

# Commit message: "Override accelerate method in EV class to adjust speed and charge."
